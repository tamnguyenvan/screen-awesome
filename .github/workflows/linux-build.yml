name: Build for Linux

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write # Cần quyền này để tạo release và upload file

jobs:
  build-linux:
    name: Build Linux AppImage
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # 1. Checkout code từ repository
      - name: '1. Checkout Repository'
        uses: actions/checkout@v4

      # 2. Cài đặt Node.js
      - name: '2. Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # 3. Cài đặt Python
      - name: '3. Set up Python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 4. Cài đặt các thư viện Python
      - name: '4. Install Python dependencies'
        run: |
          python -m pip install --upgrade pip
          pip install pynput pyinstaller

      # 5. Cài đặt các dependencies của Node.js
      - name: '5. Install npm dependencies'
        run: npm ci

      # 5.1. Cài đặt X11 và chuyển từ Wayland sang X11
      - name: '5.1 Setup X11 environment'
        run: |
          echo 'Setting up X11 environment...'
          sudo apt-get update
          sudo apt-get install -y xvfb x11-apps libxss1 libgconf-2-4 libnss3-dev libxtst6
          echo 'DISPLAY=:99' >> $GITHUB_ENV

      # 5.2. Khởi động Xvfb
      - name: '5.2 Start Xvfb'
        run: |
          echo 'Starting Xvfb...'
          Xvfb :99 -screen 0 1280x800x24 > /dev/null 2>&1 &
          sleep 3
          export DISPLAY=:99
          echo 'Xvfb started successfully'

      # 6. Tải và thiết lập FFmpeg
      - name: '6. Download and set up FFmpeg'
        run: |
          echo "Setting up FFmpeg for Linux..."
          mkdir -p binaries/linux
          curl -L -o ffmpeg.tar.xz https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz
          # Giải nén trực tiếp file ffmpeg vào thư mục đích, đơn giản và hiệu quả hơn
          tar -xf ffmpeg.tar.xz --strip-components=1 -C binaries/linux/ $(tar -tf ffmpeg.tar.xz | head -n 1)ffmpeg
          chmod +x binaries/linux/ffmpeg
          rm ffmpeg.tar.xz
          echo "FFmpeg setup complete. Verifying:"
          ls -l binaries/linux

      # 7. Cập nhật phiên bản ứng dụng từ Git Tag
      # Cải tiến: Đảm bảo file build có đúng phiên bản (ví dụ: 1.0.8) thay vì 0.0.0
      - name: '7. Sync App Version with Git Tag'
        # github.ref_name sẽ là 'v1.0.8', lệnh `substring` sẽ loại bỏ chữ 'v'
        run: npm version ${{ github.ref_name }} --no-git-tag-version

      # 8. Build ứng dụng mà KHÔNG PUBLISH với Xvfb
      # SỬA LỖI CHÍNH: Thêm cờ '--publish never' để ngăn electron-builder tự động tạo release
      - name: '8. Build the Application with Xvfb'
        run: |
          export DISPLAY=:99
          xvfb-run --auto-servernum npm run build -- --publish never

      # 9. Tạo Release và Upload Artifact
      # Cải tiến: Sử dụng action `softprops/action-gh-release` để làm cả 2 việc trong 1 bước
      - name: '9. Create Release and Upload AppImage'
        uses: softprops/action-gh-release@v2
        with:
          # Tự động tạo ghi chú phát hành từ các commit gần nhất
          generate_release_notes: true
          # Đường dẫn tới các file cần upload, hỗ trợ ký tự đại diện *
          files: |
            dist/*.AppImage