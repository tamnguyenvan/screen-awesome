name: Deploy Release
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
jobs:
  linux:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3.5.0
        with:
          node-version: 20

      - name: Install Xvfb (for headless display)
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Start Xvfb
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Cache FFmpeg binary
        uses: actions/cache@v3
        id: cache-ffmpeg
        with:
          path: binaries/linux/ffmpeg
          key: ffmpeg-${{ runner.os }}-v7.1.1
          restore-keys: |
            ffmpeg-${{ runner.os }}-

      - name: Download and setup FFmpeg
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        run: |
          mkdir -p binaries/linux
          curl -L https://github.com/tamnguyenvan/screen-awesome-assets/releases/download/release/ffmpeg -o ffmpeg
          mv ffmpeg binaries/linux/
          ls -l binaries/linux/ffmpeg

      - name: Install Modules and Publish build
        run: |
          npm install --force --silent
          npm i -g electron-builder
          tsc && npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ScreenAwesome-Linux
          path: dist/*.AppImage

  # windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-node@v3.5.0
  #       with:
  #         node-version: 20

  #     - name: Install Modules and Publish build
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         npm install
  #         npm run publish-win-app