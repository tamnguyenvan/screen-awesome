name: Deploy Release
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
jobs:
  linux:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies & PyInstaller
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python3 -m pip install pynput pyinstaller
          echo "PYTHON_VENV=$PWD/venv" >> $GITHUB_ENV

      - uses: actions/setup-node@v3.5.0
        with:
          node-version: 20

      - name: Install Xvfb (for headless display)
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Start Xvfb
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Download and setup FFmpeg
        run: |
          # 1. Tạo thư mục đích cho file nhị phân ffmpeg
          echo "Creating target directory: binaries/linux"
          mkdir -p binaries/linux
          
          # 2. Tải về phiên bản ffmpeg tĩnh
          echo "Downloading FFmpeg..."
          curl -L https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz -o ffmpeg.tar.xz
          
          # 3. Giải nén file
          echo "Extracting FFmpeg..."
          tar -xf ffmpeg.tar.xz
          
          # 4. Di chuyển file ffmpeg vào đúng vị trí
          # Tên thư mục sau khi giải nén có thể thay đổi (ví dụ: ffmpeg-6.1.1-amd64-static)
          # Sử dụng ký tự đại diện (*) để lệnh này luôn hoạt động với các phiên bản mới.
          echo "Moving ffmpeg executable to binaries/linux/"
          mv ffmpeg-*/ffmpeg binaries/linux/
          
          # 5. Xác minh rằng file đã ở đúng chỗ
          echo "Verifying ffmpeg location..."
          ls -l binaries/linux/ffmpeg

      - name: Install Modules and Publish build
        run: |
          npm install --force --silent
          npm i -g electron-builder
          tsc && npm run build && electron-builder -l --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ScreenAwesome-Linux
          path: dist/*.AppImage

  # windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-node@v3.5.0
  #       with:
  #         node-version: 20

  #     - name: Install Modules and Publish build
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         npm install
  #         npm run publish-win-app