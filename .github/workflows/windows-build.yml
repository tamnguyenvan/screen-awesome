name: 'Build for Windows'

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-windows:
    name: 'Build Windows Installer'
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # 1. Checkout code từ repository
      - name: '1. Checkout Repository'
        uses: actions/checkout@v4

      # 2. Cài đặt môi trường Node.js
      - name: '2. Setup Node.js environment'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      # 3. Cài đặt môi trường Python
      - name: '3. Setup Python environment'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 4. Cài đặt FFmpeg vào PATH của hệ thống
      - name: '4. Install FFmpeg'
        uses: FedericoCarboni/setup-ffmpeg@v3

      # 5. Sao chép FFmpeg vào thư mục `binaries`
      # Bước này đảm bảo electron-builder có thể đóng gói ffmpeg.exe vào trong ứng dụng
      - name: '5. Copy FFmpeg to local binaries folder'
        run: |
          echo "Copying ffmpeg.exe to the location expected by the application..."
          New-Item -ItemType Directory -Path "binaries/windows" -Force
          Copy-Item -Path (Get-Command ffmpeg).Source -Destination "binaries\windows\ffmpeg.exe" -Force
          echo "Verifying ffmpeg.exe exists:"
          Get-ChildItem binaries\windows

      # 6. Cài đặt các thư viện Python
      - name: '6. Install Python Dependencies'
        run: |
          python -m pip install --upgrade pip
          pip install pynput pyinstaller

      # 7. Cài đặt các dependencies của Node.js
      - name: '7. Install NPM Dependencies'
        run: npm ci

      # 8. Cập nhật phiên bản ứng dụng từ Git Tag
      # Cải tiến: Đảm bảo file build có đúng phiên bản (ví dụ: 1.0.8) thay vì 0.0.0
      - name: '8. Sync App Version with Git Tag'
        # github.ref_name sẽ là 'v1.0.8', lệnh `substring` sẽ loại bỏ chữ 'v'
        run: npm version ${{ github.ref_name }} --no-git-tag-version

      # 9. Build ứng dụng mà KHÔNG PUBLISH
      # SỬA LỖI CHÍNH: Thêm cờ '--publish never' để ngăn electron-builder tự động tạo release
      - name: '9. Build the Application'
        run: npm run build -- --publish never

      # 10. Tạo Release và Upload Installer
      # Cải tiến: Gộp 2 bước thành 1, sử dụng action hỗ trợ wildcard
      - name: '10. Create Release and Upload Installer'
        uses: softprops/action-gh-release@v2
        with:
          # Tự động tạo ghi chú phát hành từ các commit gần nhất
          generate_release_notes: true
          # Đường dẫn tới các file cần upload. Action này HỖ TRỢ wildcard.
          files: |
            dist/ScreenAwesome Setup*.exe