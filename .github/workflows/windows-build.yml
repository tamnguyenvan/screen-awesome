name: 'Build for Windows'

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-windows:
    name: 'Build Windows Installer'
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # 1. Tạo Release trên GitHub
      # Bước này phải chạy đầu tiên. Nó sẽ tạo một Release mới dựa trên tag vừa được đẩy lên.
      # Các bước sau sẽ upload file build vào Release này.
      - name: '1. Create GitHub Release'
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          # Tên của Release sẽ là tên tag
          name: Release ${{ github.ref_name }}
          # Tự động tạo nội dung release từ các commit gần nhất
          generate_release_notes: true

      # 2. Checkout code từ repository
      - name: '2. Checkout Repository'
        uses: actions/checkout@v4

      # 3. Cài đặt môi trường Node.js
      - name: '3. Setup Node.js environment'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      # 4. Cài đặt môi trường Python
      - name: '4. Setup Python environment'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 5. Cài đặt FFmpeg vào PATH của hệ thống
      - name: '5. Install FFmpeg'
        uses: FedericoCarboni/setup-ffmpeg@v3

      # 6. Copy FFmpeg to local binaries folder
      - name: '6. Copy FFmpeg to local binaries folder'
        run: |
          echo "Copying ffmpeg.exe to the location expected by the application..."
          # Create directory if it doesn't exist
          if (!(Test-Path -Path "binaries/windows")) {
            New-Item -ItemType Directory -Path "binaries/windows" -Force | Out-Null
          }
          # Find and copy ffmpeg.exe
          $ffmpegPath = Get-Command ffmpeg | Select-Object -ExpandProperty Source
          if ($ffmpegPath) {
            Copy-Item -Path $ffmpegPath -Destination "binaries\windows\ffmpeg.exe" -Force
            echo "ffmpeg.exe copied successfully to binaries\windows\"
          } else {
            echo "Error: ffmpeg.exe not found in PATH"
            exit 1
          }
          echo "Verifying ffmpeg.exe exists:"
          dir binaries\windows

      # 7. Cài đặt các thư viện Python
      - name: '7. Install Python Dependencies'
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir pynput pyinstaller

      # 8. Cài đặt các dependencies của Node.js
      # Sử dụng `npm ci` để cài đặt chính xác từ package-lock.json, tốt hơn cho CI
      - name: '8. Install NPM Dependencies'
        run: npm ci

      # 9. Build ứng dụng
      # Lệnh này sẽ chạy pyinstaller, tsc, vite, và electron-builder
      - name: '9. Build the Application'
        run: npm run build

      # 10. Upload file cài đặt .exe lên Release đã tạo ở bước 1
      - name: '10. Upload Installer to Release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # URL để upload, lấy từ output của bước 'create_release'
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # Đường dẫn tới file installer vừa được build
          # Sử dụng wildcard để tìm file .exe vừa được build
          asset_path: ./dist/*.exe
          # Tên file sẽ hiển thị trên trang Releases
          asset_name: ScreenAwesome-Setup-${{ github.ref_name }}-windows-x64.exe
          asset_content_type: application/vnd.microsoft.portable-executable